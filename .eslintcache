[{"/Users/dom/Projects/bin-juice/src/App.tsx":"1","/Users/dom/Projects/bin-juice/src/HexBlock.tsx":"2","/Users/dom/Projects/bin-juice/src/PixelBlock.tsx":"3","/Users/dom/Projects/bin-juice/src/TextBlock.tsx":"4","/Users/dom/Projects/bin-juice/src/Inspector.tsx":"5"},{"size":2444,"mtime":1611511757991,"results":"6","hashOfConfig":"7"},{"size":2348,"mtime":1611497865223,"results":"8","hashOfConfig":"7"},{"size":1307,"mtime":1611495055771,"results":"9","hashOfConfig":"7"},{"size":703,"mtime":1611495055771,"results":"10","hashOfConfig":"7"},{"size":353,"mtime":1611511678219,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hscrev",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/dom/Projects/bin-juice/src/App.tsx",[],"/Users/dom/Projects/bin-juice/src/HexBlock.tsx",["23"],"/Users/dom/Projects/bin-juice/src/PixelBlock.tsx",["24","25"],"import React, { CanvasHTMLAttributes, ReactElement, useEffect, useRef, useState } from 'react';\n\ninterface PixelBlockProps {\n  data: ArrayBuffer;\n  start: number;\n  length: number;\n}\n\nfunction PixelBlock({ data, start, length }: PixelBlockProps) {\n  const [buffer, setBuffer] = useState(new DataView(data));\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  // DOMFIXME: get from layout\n  const width = 124;\n  const height = 124;\n\n  // DOMFIXME: hooks? pass DataView as prop?\n  useEffect(() => {\n    //const arrayLength = round(length - start, 2);\n    setBuffer(new DataView(data, start, length));\n  }, [data, start, length]);\n\n  useEffect(() => {\n    const ctx = canvasRef.current?.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n\n    const image = ctx.getImageData(0, 0, width, height);\n    for (let i = 0; i < Math.floor(buffer.byteLength / 3); i += 1) {\n      const src = i * 3;\n      const dst = i * 4;\n      image.data[dst] = buffer.getUint8(src + 2);\n      image.data[dst + 1] = buffer.getUint8(src + 1);\n      image.data[dst + 2] = buffer.getUint8(src);\n      image.data[dst + 3] = 255;\n    }\n\n    ctx.putImageData(image, 0, 0);\n  }, [buffer, canvasRef]);\n\n  return (\n    <div>\n      <canvas ref={canvasRef} width={width} height={height} />\n    </div>\n  );\n}\n\nexport default PixelBlock;\n","/Users/dom/Projects/bin-juice/src/TextBlock.tsx",["26"],"/Users/dom/Projects/bin-juice/src/Inspector.tsx",["27","28","29"],{"ruleId":"30","severity":1,"message":"31","line":24,"column":5,"nodeType":"32","endLine":24,"endColumn":29,"suggestions":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":17,"nodeType":"36","messageId":"37","endLine":1,"endColumn":37},{"ruleId":"34","severity":1,"message":"38","line":1,"column":39,"nodeType":"36","messageId":"37","endLine":1,"endColumn":51},{"ruleId":"34","severity":1,"message":"39","line":3,"column":8,"nodeType":"36","messageId":"37","endLine":3,"endColumn":13},{"ruleId":"34","severity":1,"message":"38","line":1,"column":36,"nodeType":"36","messageId":"37","endLine":1,"endColumn":48},{"ruleId":"34","severity":1,"message":"40","line":1,"column":50,"nodeType":"36","messageId":"37","endLine":1,"endColumn":59},{"ruleId":"34","severity":1,"message":"41","line":1,"column":61,"nodeType":"36","messageId":"37","endLine":1,"endColumn":69},"react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'offset'. Either exclude it or remove the dependency array.","ArrayExpression",["42"],"@typescript-eslint/no-unused-vars","'CanvasHTMLAttributes' is defined but never used.","Identifier","unusedVar","'ReactElement' is defined but never used.","'round' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.",{"desc":"43","fix":"44"},"Update the dependencies array to be: [onUpdateCursor]",{"range":"45","text":"46"},[641,665],"[onUpdateCursor]"]